==================================
=======       CURRENT     ========
==================================

[ initial setup
	fill out fillables for each model == DONE
	add relationships == DONE
	adjust migrations to reflect relationships and migrate:refresh == DONE
	make the countries seeders
		countries == DONE
		regions == LATER
	work on barebones logic == DONE
		code up the frontend index page == DONE
			create factories/db seeders for: == DONE
				blogs
				blogposts
				users
				photos
			do some controller logic for all of that
				work on showing a mockup of the index page == DONE
				add the nav-bar items for archive of blogs, posts == DONE
				work on showing blogs / blog posts / photos == DONE
	work on full CRUD functionality for Users == DONE
		UserController except index, create == DONE
			show
				show the profile == DONE
			edit
				edit the profile == DONE
			delete
				soft delete? == DONE
			IsCurrentUser middleware == DONE
			Create form request to validate users == DONE

	work on full CRUD functionality for Blogs == DONE
		BlogController except create, delete
			index 
				show list of all blogs == DONE
			show
				show an individual blog's homepage == DONE
			edit
				edit the blog (name, banner (eventually), subtitle, tagline) == DONE

	work on full CRUD functionality for BlogPosts
		BlogPostController
			index 		== DONE
			show 		== DONE
			create 		== DONE
			edit 		== DONE
			update 		== DONE
			destroy 	== DONE

	work on full CRUD functionality for Photos
		PhotoController
			dropzone.js == DONE

			create 		== DONE
			destroy 	== DONE

		Add dropzone functionality on blogPost.create == ALMOST

		Inscription == DONE
			just use the update method of PhotoController. So you actually would do so after uploading the photo. You come back to the page and then you add your caption. 
			add nullable caption on migration
			refresh
			allow editing of caption from blog.edit
		
	use https://github.com/codrops/GridGallery to toy with the gallery == DONE

	Add Friends functionality

		pivot table

		some functions on the user model (addfriend, )



	code up a frontend for editing the blog settings e.g., adding a banner

	Miscellanea

		change edit on user.show so it only shows when you are current user. Probably need a helper function that returns boolean that asks if Auth::user is the user.

	use mod_rewrite to fix messy urls (read: http://code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache--net-6708)

	work on regions and countries
		probably add in PagesController to display all BlogPosts where country is in country.Probably means a BlogPost should have a country field (probably with the country code)
		


]